{
	"info": {
		"_postman_id": "e3fa71a5-1bed-4e37-be49-76f5c6902d9b",
		"name": "project-casting-agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26822356"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains actors array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.actors).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Ben\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/search?search_term=Tom",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Tom"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cilian Murphy\",\n    \"city\": \"Hue\",\n    \"state\": \"Vietnam\",\n    \"phone\": \"0934243\",\n    \"facebook_link\": \"https://facebook.com/\",\n    \"image_link\": \"https://google.com/\",\n    \"website\": \"https://google.com/\",\n    \"seeking_movie\": true,\n    \"seeking_description\": \"na\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movies array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movies).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movie object\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movie).to.be.an('object')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movies array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movies).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"None\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/search?search_term=None",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "None"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "casting assistant",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRlNDgxYmJkY2NkZjYwYjdhN2MxIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNTI0NTMsImV4cCI6MTY4ODQzODg1MywiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIl19.dCg8h379ODKP2PB7nTGcokPf_dUE0F6HQ0yikbebkrXvaYDglzHn5wM22HRWH-TVMmOL6ExvaBFqPiFkg2v-e6MvHy8fOOhLWRVVBUdUJOjK9DlcPahjOHzOTQJavwDRoZE91sg8qNHoFfd5K_gknrImFrC4_NuxeXKbMoBHXtyrDqArLdPdfcZjmNQsuXozB7JWi2HoxNHuVA5cN4_HdnMPRZNXWZgjf0L4e4daXy0_xX82kWSGoTpMEP5t42xwA2o46gt8CtCYtAbnpO8R0At0UEWzqJvMAPrseMeDLxQfQbcoZniuohmnssGhiiGHVymaaG6tvHyugvBxxZnccA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Tom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/search?search_term=Tom",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Tom"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cilian Murphy\",\n    \"city\": \"Hue\",\n    \"state\": \"Vietnam\",\n    \"phone\": \"0934243\",\n    \"facebook_link\": \"https://facebook.com/\",\n    \"image_link\": \"https://google.com/\",\n    \"website\": \"https://google.com/\",\n    \"seeking_movie\": true,\n    \"seeking_description\": \"na\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRjZTE5MjAyNDk3NjU5MDE5NTcxIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNjgyMzIsImV4cCI6MTY4ODQ1NDYzMiwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.iiJz-J79czH7kU8MxUEUnxs1zjSkYPim7qbJrcBmUM08N2t6x1Zq5eBRpUhRGHh7Nm8puSryBv1YPO92OGQzroLGpN9jT0_sh4_8ljSO0twiJ6-DQdR-fYjuc84BiOotufyOMKPlueem5T1kKsXjoBz1HzTQzfWrzjJO9H92vpyTNds1NJ4wESSMF7InE-GVtTZkbAK9J7k4orvFsZae7d5Ty5Jl0hM6rndN-k1s-RiRwwKFwEyCM7c6_iZ7bpxbKTDH58A6nz9ueiMeccUCYlY57kXZScpf2Z9OT1ZaqVVxqmbugXU3SzBMtb4pfxkKSVv7biQ3WufFQ-D2tqUFCA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Avengers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/search?search_term=Avengers",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Avengers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRjZTE5MjAyNDk3NjU5MDE5NTcxIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNjgyMzIsImV4cCI6MTY4ODQ1NDYzMiwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.iiJz-J79czH7kU8MxUEUnxs1zjSkYPim7qbJrcBmUM08N2t6x1Zq5eBRpUhRGHh7Nm8puSryBv1YPO92OGQzroLGpN9jT0_sh4_8ljSO0twiJ6-DQdR-fYjuc84BiOotufyOMKPlueem5T1kKsXjoBz1HzTQzfWrzjJO9H92vpyTNds1NJ4wESSMF7InE-GVtTZkbAK9J7k4orvFsZae7d5Ty5Jl0hM6rndN-k1s-RiRwwKFwEyCM7c6_iZ7bpxbKTDH58A6nz9ueiMeccUCYlY57kXZScpf2Z9OT1ZaqVVxqmbugXU3SzBMtb4pfxkKSVv7biQ3WufFQ-D2tqUFCA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "casting director",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Tom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/search?search_term=Tom",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Tom"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRlNDgxYmJkY2NkZjYwYjdhN2MxIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNjgzNDIsImV4cCI6MTY4ODQ1NDc0MiwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIl19.QB3GdO-8QM-Pl5iP1TMQOpfMvuSy0CRBRlBa0rD_cYTQcGv1i2bJMsiKVEhQFdtki_rJodyrC2sxgu7ij93wlHfdB567Ap0mGOqTlf6RSSPfm45sV8xQ56kH5Y-qO97SWjpnt8r320XxUuqBc18cFnmIkbdhpZlNp1WhYf9AJBokZLhADEizvd20iKEN1KqTqskMH7my8xj5XDbPKGY9zkBXGN5YwtaqLTd2EwQnSxuvRTMFv4dnPU9zc2shaSB105uNiI8xAo7BZei1qw0OhwnIqf0vqgwVRl32Z8gfUBHtt-v4cIJtby5N4uCRH38FVokWkC_CnfuF-VHtk1WFYQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Tom Holland",
									"type": "text"
								},
								{
									"key": "age",
									"value": "26",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "https://encrypted-tbn0.gstatic.com/licensed-image?q=tbn:ANd9GcRx2_mC8SB1BHhvAL_wDw8EjvMrt1gTqr6CUsiPUJ-UgGrJmrTSo8Mt5fmwGqLUcnIh3ohgdfu6l5kNM4Q",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Angelina Jolie",
									"type": "text"
								},
								{
									"key": "age",
									"value": "48",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "Female",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "https://media.allure.com/photos/647f876463cd1ef47aab9c88/1:1/w_2466,h_2466,c_limit/angelina%20jolie%20blonde%20hair%20chloe.jpg",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/search?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRkYWNlMjNiMTQyNjg5MzUyZmFiIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgwMDcwOTEsImV4cCI6MTY4ODA5MzQ5MSwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.fWETYKvi4AzPMDnloan6AtaFZv59d1uBjzkc2yhaIChtWCZYS-iqGWgdUxwcRjkYnJoBhcRVnAaASWtzGroPfc4pIWeE_rO1nEcPLw2hWvX9H7JzBdXLaBxGUrjz3f9sV82S-QQ1SH0cfSmeNLzrZulc07tYyRvZ88L7UGs-Q9v-gxSM4v22dt2H5ABJFEhP66wM9TqAwEGkn4233_Ru6I_dNEnW-5EXAOBPuLpCp0UdlHFPaexsRYmAF921qo1SQQpSeTmNPoR5jVvcQdJCxQh3e5AtlhgzSwx2grxZ4mIo_OnPZI0QM-Xz3XN0NNHyi2rlRzw5otHmli2fEb5s-w",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Avengers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/search?search_term=Avengers",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"search"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Avengers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure|Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Kate Winslet",
									"type": "text"
								},
								{
									"key": "age",
									"value": "47",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "Female",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "https://cdn.britannica.com/38/130638-050-DBCE19EE/Kate-Winslet.jpg",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRlNDgxYmJkY2NkZjYwYjdhN2MxIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNjgzNDIsImV4cCI6MTY4ODQ1NDc0MiwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIl19.QB3GdO-8QM-Pl5iP1TMQOpfMvuSy0CRBRlBa0rD_cYTQcGv1i2bJMsiKVEhQFdtki_rJodyrC2sxgu7ij93wlHfdB567Ap0mGOqTlf6RSSPfm45sV8xQ56kH5Y-qO97SWjpnt8r320XxUuqBc18cFnmIkbdhpZlNp1WhYf9AJBokZLhADEizvd20iKEN1KqTqskMH7my8xj5XDbPKGY9zkBXGN5YwtaqLTd2EwQnSxuvRTMFv4dnPU9zc2shaSB105uNiI8xAo7BZei1qw0OhwnIqf0vqgwVRl32Z8gfUBHtt-v4cIJtby5N4uCRH38FVokWkC_CnfuF-VHtk1WFYQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "executive producer",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRkYWNlMjNiMTQyNjg5MzUyZmFiIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgwMDcwOTEsImV4cCI6MTY4ODA5MzQ5MSwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.fWETYKvi4AzPMDnloan6AtaFZv59d1uBjzkc2yhaIChtWCZYS-iqGWgdUxwcRjkYnJoBhcRVnAaASWtzGroPfc4pIWeE_rO1nEcPLw2hWvX9H7JzBdXLaBxGUrjz3f9sV82S-QQ1SH0cfSmeNLzrZulc07tYyRvZ88L7UGs-Q9v-gxSM4v22dt2H5ABJFEhP66wM9TqAwEGkn4233_Ru6I_dNEnW-5EXAOBPuLpCp0UdlHFPaexsRYmAF921qo1SQQpSeTmNPoR5jVvcQdJCxQh3e5AtlhgzSwx2grxZ4mIo_OnPZI0QM-Xz3XN0NNHyi2rlRzw5otHmli2fEb5s-w",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Tom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors?search_term=Tom",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Tom"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Tom Holland",
									"type": "text"
								},
								{
									"key": "age",
									"value": "26",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "https://eu-images.contentstack.com/v3/assets/bltbc1876152fcd9f07/blt8928edd562fd93a7/647dab44019d8248e77f05e5/spider-man_tom_holland.png",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/create?Content-Type=application/json",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Tome Cruise 1",
									"type": "text"
								},
								{
									"key": "age",
									"value": "60",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/1/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRkYWNlMjNiMTQyNjg5MzUyZmFiIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgwMDcwOTEsImV4cCI6MTY4ODA5MzQ5MSwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.fWETYKvi4AzPMDnloan6AtaFZv59d1uBjzkc2yhaIChtWCZYS-iqGWgdUxwcRjkYnJoBhcRVnAaASWtzGroPfc4pIWeE_rO1nEcPLw2hWvX9H7JzBdXLaBxGUrjz3f9sV82S-QQ1SH0cfSmeNLzrZulc07tYyRvZ88L7UGs-Q9v-gxSM4v22dt2H5ABJFEhP66wM9TqAwEGkn4233_Ru6I_dNEnW-5EXAOBPuLpCp0UdlHFPaexsRYmAF921qo1SQQpSeTmNPoR5jVvcQdJCxQh3e5AtlhgzSwx2grxZ4mIo_OnPZI0QM-Xz3XN0NNHyi2rlRzw5otHmli2fEb5s-w",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies?search_term=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"Avengers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies?search_term=Avengers",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "search_term",
									"value": "Avengers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Avengers: Endgame 1",
									"type": "text"
								},
								{
									"key": "release_date",
									"value": "01/06/2023",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkRpLURsbjRGdHlBQkJ5djZCSWR1MSJ9.eyJpc3MiOiJodHRwczovL2tob2l2dS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjQ5YmRkYWNlMjNiMTQyNjg5MzUyZmFiIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2ODgzNjg0MjQsImV4cCI6MTY4ODQ1NDgyNCwiYXpwIjoiR0JBV0hrd0ZBdmVMZjI4aXU5UDlyUXZZbTNRMEV4NkciLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.aikwOClL1w07k-cED0toMij8EhMjm-Al_FJ2Mbja4h2VdyqyYWvEVlc_4CzgI6q4OxOlKyOUQCb7g0k_gUka1xH8tYID48ahGlPg3AumdnfC4c57GTCrmK6M-78dc91vvzO4yWywuQmMv-vw2isEd02dcTa07kcwRF_R0P-s4U8CEgmiry11rP3VkgD_XkdhNZ98laY3PXKxzclzlkemUx9WrHYl7UFgMtSiuERHtLyOvmK7fwfBvRxDH2xjO17RyudqZUj2cFbodwec_0R4MynmHdIr8Byw3xuZ2W-pK5KF5NVBWH_4pkKrAUMML1ZlclF2Prug24v7DXg5ScFLDQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "127.0.0.1:5000",
			"type": "string"
		}
	]
}